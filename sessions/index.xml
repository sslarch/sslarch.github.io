<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Sessions on CAA/SSLA</title><link>https://sslarch.github.io/sessions/</link><description>Recent content in Sessions on CAA/SSLA</description><generator>Hugo</generator><language>en</language><lastBuildDate>Wed, 05 Apr 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://sslarch.github.io/sessions/index.xml" rel="self" type="application/rss+xml"/><item><title>Reproducing, Reusing, and Revising Code and Data in Archaeology</title><link>https://sslarch.github.io/sessions/caa2023_session/</link><pubDate>Wed, 05 Apr 2023 00:00:00 +0000</pubDate><guid>https://sslarch.github.io/sessions/caa2023_session/</guid><description>When: 2023-04-05,08:30-13:00 CEST
Where: Room E107, RAI Congress Center, Europaplein 24, 1078 GZ Amsterdam
Abstract This session aims at evaluating how reproducible research in archaeology is actually faring. It has been argued that reproducible research techniques such as publishing and sharing code as well as data speed up scientific progress (Marwick 2017, Schmidt &amp;amp; Marwick 2020). With the FAIR movement and the rise of (Linked) Open Data approaches there seem to be more and more archaeological data sets available.</description></item><item><title>Workflows and experiences on collaborative working and community building using digital tools</title><link>https://sslarch.github.io/sessions/caa2022_session/</link><pubDate>Thu, 11 Aug 2022 00:00:00 +0000</pubDate><guid>https://sslarch.github.io/sessions/caa2022_session/</guid><description>When: 2022-08-11, 15:30-17:00 BST
Where: Online and Room 11 Examination Schools, 75-81 The High Street, Oxford, OX1 4BG
Abstract For a long time now, archaeological research has not been conducted by individual researchers who come up with brilliant theories in their study rooms and investigate them by themselves and on their own terms. It is a fact that no serious scientific research can be conducted without substantial and extensive collaboration.</description></item><item><title>How to navigate the coding archaeology world: an introduction to scientific co-creation using Git and Github</title><link>https://sslarch.github.io/sessions/caa2022_workshop/</link><pubDate>Thu, 11 Aug 2022 00:00:00 +0000</pubDate><guid>https://sslarch.github.io/sessions/caa2022_workshop/</guid><description>When: 2022-08-08, 15:30 - 17:00 BTS
Where: Online and in person, Lecture Theatre at the School of Archaeology (1 South Parks Road, Oxford, OX1 3TG)
Abstract The archaeological community is moving beyond the traditional modes of scientific communication, such as research papers, monographs and conference talks, and interacts online on a daily basis. Especially for archaeologists, who use and develop advanced, computational tools, a new kind of platform increasingly extends mailing lists and social media here, and has proven invaluable for collaborative work: Version control systems to develop, share and test manuscripts, figures and code.</description></item><item><title>Tools for the Revolution: developing packages for scientific programming in archaeology</title><link>https://sslarch.github.io/sessions/caa2021_session/</link><pubDate>Mon, 17 May 2021 00:00:00 +0000</pubDate><guid>https://sslarch.github.io/sessions/caa2021_session/</guid><description>When: 2021-06-16, 09:50–12:20 (UTC)
Where: Online, Room S (morning), Room P (afternoon)
Abstract The increasing use of scientific programming languages (e.g. R or Python) is transforming the practice of quantitative archaeology. This “tool-driven revolution” (Schmidt and Marwick 2020) promises to greatly improve the accessibility, power, and reproducibility of computational analyses. It is a core component of the “Third Science Revolution” (Kristiansen 2014), which has major theoretical and practical implications for the discipline of archaeology as a whole.</description></item><item><title>Developing R packages</title><link>https://sslarch.github.io/sessions/caa2021_workshop/</link><pubDate>Mon, 17 May 2021 00:00:00 +0000</pubDate><guid>https://sslarch.github.io/sessions/caa2021_workshop/</guid><description>When: 2021-06-14
Where: Online
Abstract A growing number of researchers use the scripting language R (R Core Team 2020) for scientific data analysis. Many organise their code in scripts and functions to perform sequences of data manipulation, statistics and visualisation. Sometimes these workflows gain in complexity and it becomes feasible to outsource core components into a dedicated R package. Packages are one of the best ways to make R code reproducible as they provide a well established structure to share functions, data and their documentation with other R-users.</description></item><item><title>Hackathon II – Unconference!</title><link>https://sslarch.github.io/sessions/caa2020_session/</link><pubDate>Mon, 01 Jun 2020 00:00:00 +0000</pubDate><guid>https://sslarch.github.io/sessions/caa2020_session/</guid><description>Update: As CAA2020 is not going to take place this session will not happen either. We will think about the concept and may resubmit for CAA 2021.
Pre-session discussion: https://github.com/sslarch/caa2020_hackathon/issues
Abstract Scientific scripting languages are a very powerful tool for scientists to translate research questions and quantitative analysis into a machine-readable, executable and thus reproducible form. In order to promote and support their dissemination to the archaeological community, we have de facto established the Special Interest Group for Scientific Scripting Languages in Archaeology at CAA2019 in Krakow.</description></item><item><title>Scientific Scripting Languages in Archaeology – Limits and Opportunities of Open Research</title><link>https://sslarch.github.io/sessions/caa2019_roundtable/</link><pubDate>Wed, 24 Apr 2019 00:00:00 +0000</pubDate><guid>https://sslarch.github.io/sessions/caa2019_roundtable/</guid><description>When: 2019/04/24, 16:00-18:00
Where: Auditorium Maximum of the Jagiellonian University, Kraków, seminar room, level 2 Here you may find the protocol
Discussants Martin Hinz (University of Bern)
Joe Roe (University of Copenhagen)
Iza Romanowska (Barcelona Supercomputing Center)
Sophie Schmidt (University of Cologne)
Clemens Schmid (Römisch-Germanisches Zentralmuseum Mainz)
Lizzie Scholtus (University of Strasbourg)
Abstract At last year&amp;rsquo;s CAA, during the session on R in Archaeology, a suggestion was made to set up a Special Interest Group on Scientific Scripting Languages in Archaeology (SIG SSLA).</description></item><item><title>Hackathon I – Can you code this?</title><link>https://sslarch.github.io/sessions/caa2019_workshop/</link><pubDate>Tue, 23 Apr 2019 00:00:00 +0000</pubDate><guid>https://sslarch.github.io/sessions/caa2019_workshop/</guid><description>When: 2019/04/23
Where: Auditorium Maximum of the Jagiellonian University
Abstract In general, scientific scripting languages are the best interface for archaeologists to translate research questions into a machine-readable and executable form for quantitative analysis. For every step of data processing – data acquisition, analysis and presentation – there are high-quality software frameworks that enable fast, elegant, human-readable and reproducible coding. And yet, script languages are still not widely used! One of the main reason for this is the often steep learning curve.</description></item><item><title>Applying Archaeological Research Software Engineering as Little Minions: Statistical &amp; Computational Approaches to Daily Archaeological Tasks</title><link>https://sslarch.github.io/sessions/eaa2024_session/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sslarch.github.io/sessions/eaa2024_session/</guid><description>When: 2024&amp;ndash;08 Where: Sapienza University of Rome Piazzale Aldo Moro, 5, 00185 Roma RM, Italy
Abstract Nowadays computer applications as well as statistical and computational approaches constitute a big part of the toolbox of every archaeologist, as they open tremendous possibilities for all research. These can be ready-to-use (proprietary) software applications but also “Little Minions” (self-scripted tools) or research software (e.g. implementation of statistic algorithms in R, Python), which are written by researchers.</description></item></channel></rss>