<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Sessions on CAA/SSLA</title><link>https://sslarch.github.io/sessions/</link><description>Recent content in Sessions on CAA/SSLA</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sat, 31 Aug 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://sslarch.github.io/sessions/index.xml" rel="self" type="application/rss+xml"/><item><title>Applying Archaeological Research Software Engineering as Little Minions: Statistical &amp; Computational Approaches to Daily Archaeological Tasks</title><link>https://sslarch.github.io/sessions/eaa2024_session/</link><pubDate>Sat, 31 Aug 2024 00:00:00 +0000</pubDate><guid>https://sslarch.github.io/sessions/eaa2024_session/</guid><description>&lt;p>&lt;strong>When&lt;/strong>: 2024-08-31
&lt;strong>Where&lt;/strong>: Sapienza University of Rome
Piazzale Aldo Moro, 5, 00185 Roma RM, Italy&lt;/p>
&lt;h2 id="abstract">Abstract&lt;/h2>
&lt;p>Nowadays computer applications as well as statistical and computational approaches constitute a big part of the toolbox of every archaeologist, as they open tremendous possibilities for all research. These can be ready-to-use (proprietary) software applications but also “Little Minions” (self-scripted tools) or research software (e.g. implementation of statistic algorithms in R, Python), which are written by researchers. Both, research software and research data are part of Computational Archaeology and play an important role in up-to-date archaeological research. Optimally research data (and software) is FAIR(4RS) – Findable, Accessible, Interoperable, Re-usable (for Research Software) – and reproducible of which other users can benefit from or even develop further. The increasing number of topics and papers at the international and national chapters of the CAA show manifold applications but also implications. Working Groups like the SIG SSLA (&lt;a href="https://sslarch.github.io">https://sslarch.github.io&lt;/a>) or the “Little Minions” (&lt;a href="https://littleminions.link">https://littleminions.link&lt;/a>) also deal with Computational Archaeology and are building a community.
Several initiatives, such as the German National Research Data Infrastructure (NFDI) – especially NFDI4Objects – or the European Open Science Cloud (EOSC), engage with this topic to strengthen the position of Computational Archaeologists and Research Software Engineers, highlight the scientific merit of their work, and ensure researchers receive credit for computational approaches, software development, as well as for writing papers.
To support this, this session invites contributions dealing with various aspects of Computational Archaeology, but not limited to:&lt;/p></description></item><item><title>Reproducing, Reusing, and Revising Code and Data in Archaeology</title><link>https://sslarch.github.io/sessions/caa2023_session/</link><pubDate>Wed, 05 Apr 2023 00:00:00 +0000</pubDate><guid>https://sslarch.github.io/sessions/caa2023_session/</guid><description>&lt;p>&lt;strong>When&lt;/strong>: 2023-04-05,08:30-13:00 CEST&lt;br>
&lt;strong>Where&lt;/strong>: Room E107, RAI Congress Center, Europaplein 24, 1078 GZ Amsterdam&lt;/p>
&lt;h2 id="abstract">Abstract&lt;/h2>
&lt;p>This session aims at evaluating how reproducible research in archaeology is actually faring. It has been argued that reproducible research techniques such as publishing and sharing code as well as data speed up scientific progress (Marwick 2017, Schmidt &amp;amp; Marwick 2020). With the FAIR movement and the rise of (Linked) Open Data approaches there seem to be more and more archaeological data sets available. Code used for archaeological analysis is also increasingly published online. There are a growing number of openly available code examples that have been used for articles (see for R &lt;a href="https://github.com/benmarwick/ctv-archaeology">https://github.com/benmarwick/ctv-archaeology&lt;/a>, or for Netlogo &lt;a href="https://www.comses.net/codebases/?query=archaeology">https://www.comses.net/codebases/?query=archaeology&lt;/a> ). In some cases, this shared code may be adapted into “little helpers”, small modules of research software, aka Little Minions (Thiery et al. 2021), that can be reused and individually adapted. The community of Research Software Engineers (RSE), people who create software applications for research, is growing. For better dissemination of these programs, they created the FAIR4RS principles (Hong et al. 2022). RSEs are fighting for scientific recognition by e.g. implementing the CFF format to cite software (Anzt et al. 2020). But despite this general progress, published articles reusing or adapting open data or code are rare in archaeology. It is difficult to assess how often code and data are reused for research, but the rate of reuse appears to be low (Huggett 2018, Marwick and Birch 2018). Open data and code may be reused more often for teaching (Cook et al. 2018, Gartski 2022, Marwick et al. 2019), but it is not clear how often this happens. In this session we would like to ask the following questions&lt;/p></description></item><item><title>Workflows and experiences on collaborative working and community building using digital tools</title><link>https://sslarch.github.io/sessions/caa2022_session/</link><pubDate>Thu, 11 Aug 2022 00:00:00 +0000</pubDate><guid>https://sslarch.github.io/sessions/caa2022_session/</guid><description>&lt;p>&lt;strong>When:&lt;/strong> &lt;a href="https://2022.caaconference.org/programme/">2022-08-11, 15:30-17:00 BST&lt;/a>&lt;br>
&lt;strong>Where:&lt;/strong> Online and Room 11 Examination Schools, 75-81 The High Street, Oxford, OX1 4BG&lt;/p>
&lt;h2 id="abstract">Abstract&lt;/h2>
&lt;p>For a long time now, archaeological research has not been conducted by individual researchers who come up with brilliant theories in their study rooms and investigate them by themselves and on their own terms. It is a fact that no serious scientific research can be conducted without substantial and extensive collaboration.&lt;/p>
&lt;p>The internet facilitated a significant change in work processes, something we have been able to experience vividly in the last two years. Since it was intended from the start as a tool to enable scientific exchange, it is all the more astonishing that collaborative work via the internet did not develop further from back-and-forth emailing of text manuscripts for such a long time. By now there are a variety of different systems and solutions: communication via Slack or Signal, co-writing via Google Docs or Overleaf, data co-creation in online database systems, Open Science Framework or Wikidata, as well as code co-development via GitHub or GitLab.&lt;/p></description></item><item><title>How to navigate the coding archaeology world: an introduction to scientific co-creation using Git and Github</title><link>https://sslarch.github.io/sessions/caa2022_workshop/</link><pubDate>Thu, 11 Aug 2022 00:00:00 +0000</pubDate><guid>https://sslarch.github.io/sessions/caa2022_workshop/</guid><description>&lt;p>&lt;strong>When:&lt;/strong> 2022-08-08, 15:30 - 17:00 BTS&lt;br>
&lt;strong>Where:&lt;/strong> Online and in person, Lecture Theatre at the School of Archaeology (1 South Parks Road, Oxford, OX1 3TG)&lt;/p>
&lt;h2 id="abstract">Abstract&lt;/h2>
&lt;p>The archaeological community is moving beyond the traditional modes of scientific communication, such as research papers, monographs and conference talks, and interacts online on a daily basis. Especially for archaeologists, who use and develop advanced, computational tools, a new kind of platform increasingly extends mailing lists and social media here, and has proven invaluable for collaborative work: Version control systems to develop, share and test manuscripts, figures and code.&lt;/p></description></item><item><title>Tools for the Revolution: developing packages for scientific programming in archaeology</title><link>https://sslarch.github.io/sessions/caa2021_session/</link><pubDate>Mon, 17 May 2021 00:00:00 +0000</pubDate><guid>https://sslarch.github.io/sessions/caa2021_session/</guid><description>&lt;p>&lt;strong>When:&lt;/strong> &lt;a href="https://2021.caaconference.org/programme/">2021-06-16, 09:50–12:20&lt;/a> (UTC)&lt;br>
&lt;strong>Where:&lt;/strong> Online, Room S (morning), Room P (afternoon)&lt;/p>
&lt;h2 id="abstract">Abstract&lt;/h2>
&lt;p>The increasing use of scientific programming languages (e.g. R or Python) is transforming the practice of quantitative archaeology. This “tool-driven revolution” (Schmidt and Marwick 2020) promises to greatly improve the accessibility, power, and reproducibility of computational analyses. It is a core component of the “Third Science Revolution” (Kristiansen 2014), which has major theoretical and practical implications for the discipline of archaeology as a whole.&lt;/p></description></item><item><title>Developing R packages</title><link>https://sslarch.github.io/sessions/caa2021_workshop/</link><pubDate>Mon, 17 May 2021 00:00:00 +0000</pubDate><guid>https://sslarch.github.io/sessions/caa2021_workshop/</guid><description>&lt;p>&lt;strong>When:&lt;/strong> 2021-06-14&lt;br>
&lt;strong>Where:&lt;/strong> Online&lt;/p>
&lt;h2 id="abstract">Abstract&lt;/h2>
&lt;p>A growing number of researchers use the scripting language R (R Core Team 2020) for scientific data analysis. Many organise their code in scripts and functions to perform sequences of data manipulation, statistics and visualisation. Sometimes these workflows gain in complexity and it becomes feasible to outsource core components into a dedicated R package. Packages are one of the best ways to make R code reproducible as they provide a well established structure to share functions, data and their documentation with other R-users. The vast numbers of packages by diverse developers on the Comprehensive R Archive Network (CRAN) indicate their popularity in the scientific community and they could very well become a pillar of scientific progress in archaeology (Schmidt and Marwick 2020). Indeed more and more packages are also being developed by and for archaeologists (e.g. &lt;a href="http://open-archaeo.info">http://open-archaeo.info&lt;/a>).&lt;/p></description></item><item><title>Hackathon II – Unconference!</title><link>https://sslarch.github.io/sessions/caa2020_session/</link><pubDate>Mon, 01 Jun 2020 00:00:00 +0000</pubDate><guid>https://sslarch.github.io/sessions/caa2020_session/</guid><description>&lt;p>&lt;strong>Update: As CAA2020 is &lt;a href="https://caa-international.org/2020/06/11/caa-2020-cancelled/">not going to take place&lt;/a> this session will not happen either. We will think about the concept and may resubmit for CAA 2021.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Pre-session discussion:&lt;/strong> &lt;a href="https://github.com/sslarch/caa2020_hackathon/issues">https://github.com/sslarch/caa2020_hackathon/issues&lt;/a>&lt;/p>
&lt;h3 id="abstract">Abstract&lt;/h3>
&lt;p>Scientific scripting languages are a very powerful tool for scientists to translate research questions and quantitative analysis into a machine-readable, executable and thus reproducible form. In order to promote and support their dissemination to the archaeological community, we have de facto established the Special Interest Group for Scientific Scripting Languages in Archaeology at CAA2019 in Krakow. To celebrate the de jure affiliation of this SIG to the CAA organization in 2020, this session will provide an open hackerspace for users of scripting languages.&lt;/p></description></item><item><title>Scientific Scripting Languages in Archaeology – Limits and Opportunities of Open Research</title><link>https://sslarch.github.io/sessions/caa2019_roundtable/</link><pubDate>Wed, 24 Apr 2019 00:00:00 +0000</pubDate><guid>https://sslarch.github.io/sessions/caa2019_roundtable/</guid><description>&lt;p>&lt;strong>When:&lt;/strong> 2019/04/24, 16:00-18:00&lt;br>
&lt;strong>Where:&lt;/strong> Auditorium Maximum of the Jagiellonian University, Kraków, seminar room, level 2
&lt;a href="protocols/2019-04-24.txt">&lt;strong>Here you may find the protocol&lt;/strong>&lt;/a>&lt;/p>
&lt;h2 id="discussants">Discussants&lt;/h2>
&lt;p>&lt;a href="https://twitter.com/martinusrihhi">Martin Hinz&lt;/a> (University of Bern)&lt;br>
&lt;a href="https://twitter.com/joeroe90">Joe Roe&lt;/a> (University of Copenhagen)&lt;br>
&lt;a href="https://twitter.com/iza_romanowska">Iza Romanowska&lt;/a> (Barcelona Supercomputing Center)&lt;br>
&lt;a href="https://twitter.com/idhrenil">Sophie Schmidt&lt;/a> (University of Cologne)&lt;br>
&lt;a href="https://twitter.com/nevromecs">Clemens Schmid&lt;/a> (Römisch-Germanisches Zentralmuseum Mainz)&lt;br>
&lt;a href="https://twitter.com/scholtuslizzie">Lizzie Scholtus&lt;/a> (University of Strasbourg)&lt;/p>
&lt;h2 id="abstract">Abstract&lt;/h2>
&lt;p>At last year&amp;rsquo;s CAA, during the session on R in Archaeology, a suggestion was made to set up a Special Interest Group on Scientific Scripting Languages in Archaeology (SIG SSLA). We would like to comply with this proposal at this year&amp;rsquo;s CAA. We would also like to take advantage of the forum to discuss the SIG&amp;rsquo;s goals and agenda in a round table.&lt;/p></description></item><item><title>Hackathon I – Can you code this?</title><link>https://sslarch.github.io/sessions/caa2019_workshop/</link><pubDate>Tue, 23 Apr 2019 00:00:00 +0000</pubDate><guid>https://sslarch.github.io/sessions/caa2019_workshop/</guid><description>&lt;p>&lt;strong>When:&lt;/strong> 2019/04/23&lt;br>
&lt;strong>Where:&lt;/strong> Auditorium Maximum of the Jagiellonian University&lt;/p>
&lt;h2 id="abstract">Abstract&lt;/h2>
&lt;p>In general, scientific scripting languages are the best interface for archaeologists to translate research questions into a machine-readable and executable form for quantitative analysis. For every step of data processing – data acquisition, analysis and presentation – there are high-quality software frameworks that enable fast, elegant, human-readable and reproducible coding. And yet, script languages are still not widely used! One of the main reason for this is the often steep learning curve. An important goal of the proposed Special Interest Group on Scientific Scripting Languages in Archaeology (SIG SSLA) is to provide guidance on how to overcome this obstacle.&lt;/p></description></item></channel></rss>